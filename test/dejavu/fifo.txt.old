time bin/ryjavu '(forall[x].([enter, *x] implies not(pre(once [enter,*x])))) and (forall[x].([exit, *x] implies not(pre(once [exit, *x])))) and (forall[x].([exit, *x] implies pre(once [enter,*x]))) and (forall[x,y].(([exit, *y] and once([enter,*y] and pre(once [enter,*x]))) implies pre(once [exit, *x])))' build/benchmark-challenge-2018/Open/DejaVu/property3-fifo/log-5k.csv
time bin/ryjavu '(forall[x].([enter, *x] implies not(pre(once [enter,*x])))) and (forall[x].([exit, *x] implies not(pre(once [exit, *x])))) and (forall[x].([exit, *x] implies pre(once [enter,*x]))) and (forall[x,y].(([exit, *y] and once([enter,*y] and pre(once [enter,*x]))) implies pre(once [exit, *x])))' build/benchmark-challenge-2018/Open/DejaVu/property3-fifo/log-10k.csv